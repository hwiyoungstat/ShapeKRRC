// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// Arcdist
double Arcdist(arma::cx_vec x, arma::cx_vec y);
RcppExport SEXP _ShapeKRRC_Arcdist(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::cx_vec >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::cx_vec >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(Arcdist(x, y));
    return rcpp_result_gen;
END_RCPP
}
// ARCG
double ARCG(arma::cx_vec x, arma::cx_vec y, double Sig);
RcppExport SEXP _ShapeKRRC_ARCG(SEXP xSEXP, SEXP ySEXP, SEXP SigSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::cx_vec >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::cx_vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type Sig(SigSEXP);
    rcpp_result_gen = Rcpp::wrap(ARCG(x, y, Sig));
    return rcpp_result_gen;
END_RCPP
}
// KRRC_ARC
arma::mat KRRC_ARC(Rcpp::List x, arma::cx_mat xtest, arma::vec y, double Sig, double lambda);
RcppExport SEXP _ShapeKRRC_KRRC_ARC(SEXP xSEXP, SEXP xtestSEXP, SEXP ySEXP, SEXP SigSEXP, SEXP lambdaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::cx_mat >::type xtest(xtestSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type Sig(SigSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    rcpp_result_gen = Rcpp::wrap(KRRC_ARC(x, xtest, y, Sig, lambda));
    return rcpp_result_gen;
END_RCPP
}
// VWdist
double VWdist(arma::cx_mat x, arma::cx_mat y);
RcppExport SEXP _ShapeKRRC_VWdist(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::cx_mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::cx_mat >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(VWdist(x, y));
    return rcpp_result_gen;
END_RCPP
}
// EVWG
double EVWG(arma::cx_mat x, arma::cx_mat y, double Sig);
RcppExport SEXP _ShapeKRRC_EVWG(SEXP xSEXP, SEXP ySEXP, SEXP SigSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::cx_mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::cx_mat >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type Sig(SigSEXP);
    rcpp_result_gen = Rcpp::wrap(EVWG(x, y, Sig));
    return rcpp_result_gen;
END_RCPP
}
// KRRC_VWG
arma::mat KRRC_VWG(Rcpp::List x, arma::cx_cube xtest, arma::vec y, double Sig, double lambda);
RcppExport SEXP _ShapeKRRC_KRRC_VWG(SEXP xSEXP, SEXP xtestSEXP, SEXP ySEXP, SEXP SigSEXP, SEXP lambdaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::cx_cube >::type xtest(xtestSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type Sig(SigSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    rcpp_result_gen = Rcpp::wrap(KRRC_VWG(x, xtest, y, Sig, lambda));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_ShapeKRRC_Arcdist", (DL_FUNC) &_ShapeKRRC_Arcdist, 2},
    {"_ShapeKRRC_ARCG", (DL_FUNC) &_ShapeKRRC_ARCG, 3},
    {"_ShapeKRRC_KRRC_ARC", (DL_FUNC) &_ShapeKRRC_KRRC_ARC, 5},
    {"_ShapeKRRC_VWdist", (DL_FUNC) &_ShapeKRRC_VWdist, 2},
    {"_ShapeKRRC_EVWG", (DL_FUNC) &_ShapeKRRC_EVWG, 3},
    {"_ShapeKRRC_KRRC_VWG", (DL_FUNC) &_ShapeKRRC_KRRC_VWG, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_ShapeKRRC(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
